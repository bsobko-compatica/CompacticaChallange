name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            7.0.x   
          cache: true

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Test + Coverage
        run: |
          dotnet test --configuration Release --no-build \
            --collect:"XPlat Code Coverage" \
            --logger "trx;LogFileName=test-results.trx"

     
      - name: Install ReportGenerator
        run: dotnet tool update -g dotnet-reportgenerator-globaltool

      - name: Create coverage report
        shell: bash
        run: |
          mkdir -p coverage
          # знайти всі файли coverage.cobertura.xml
          mapfile -t covs < <(find . -type f -name "coverage.cobertura.xml")
          # зліпити їх в один html+Cobertura
          reportgenerator \
            -reports:"${covs[*]}" \
            -targetdir:"coverage" \
            -reporttypes:"Html;Cobertura" \
            -historydir:"coverage-history" || true
          # для зручності покласти ще й сирі результати тестів
          mkdir -p test-results
          find . -type f -name "*.trx" -exec cp {} test-results/ \;

      - name: Upload coverage artifact (HTML + Cobertura)
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage/**
            test-results/**
